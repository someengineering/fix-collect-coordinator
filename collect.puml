@startuml

actor User

component FixFrontend {
}

User --> FixFrontend


frame HetznerCloud {

  frame Kubernetes {

    component AuthStore <<Deployment>> {
    }
    component FixBackend <<Deployment>> {
    }
    component CollectCoordinator <<Deployment>> {
    }
    component CollectSingleJob <<Job>> {
    }

    database ArangoDb <<StatefulSet>> {
    }
    database Redis <<StatefulSet>> {
    }
    database PostgresQL <<StatefulSet>> {
    }
    CollectCoordinator -> CollectSingleJob: spwans for every\ntenant/account
    CollectSingleJob --> ArangoDb
    CollectSingleJob --> Redis: push progress
    CollectSingleJob --> FixBackend: Security Benchmark Results
    FixBackend --> Redis
    AuthStore --> Redis: org changes
    AuthStore --> PostgresQL
    CollectCoordinator --> Redis: listen for org changes
    CollectCoordinator --> PostgresQL

    component Inventory <<Deployment>> {
    }
    Inventory --> ArangoDb: read data
  }
}


FixFrontend --> AuthStore
FixFrontend --> FixBackend
FixBackend --> PostgresQL
FixBackend --> Inventory
@enduml


@startuml
frame ResotoBaseImage
frame CollectSingle
ResotoBaseImage <|-- CollectSingle
note right of CollectSingle
   Use Resoto Base Image.
   Include collect_single project.
   Starting this image will run for
   for a single collect cycle.
end note
@enduml
