@startuml

actor User

component FixFrontend {
}

User --> FixFrontend


frame HetznerCloud {

  frame Kubernetes {

    component FixBackend <<Deployment>> {
    }
    note bottom of FixBackend
      The Fix Backend is the main application.

      Authentication Layer.
      All requests of the user need to pass this entity.
      All requests that pass this stage are considered authenticated.
      Authorization needs to be checked in the related component.
    end note
    component CollectCoordinator <<Deployment>> {
    }
    component CollectSingleJob <<Job>> {
    }

    database ArangoDb <<StatefulSet>> {
    }
    note right of ArangoDb
      Every tenant is one Arango Database.
      Multiple databases per node.
      Multiple Nodes in the Cluster.
      Each node has one Persistent Volume.
    end note
    database Redis <<StatefulSet>> {
    }
    CollectCoordinator -> CollectSingleJob: spwans for every\ntenant/account
    CollectSingleJob --> ArangoDb
    CollectSingleJob --> Redis: push progress
    CollectSingleJob --> FixBackend: Security Benchmark Results
    Redis --> FixBackend: progress updates

    component Inventory <<Deployment>> {
    }
    note top of Inventory
      Special version of ResotoCore.
      Used for search and executing CLI Commands.
      No event system, no workflows, no jobs.
    end note
    Inventory --> ArangoDb: read data
  }
}
database PlanetScale {
}
note bottom of PlanetScale
  Stores all user relevant data.
end note



FixFrontend --> FixBackend
FixBackend --> PlanetScale
FixBackend --> Inventory
@enduml


@startuml
frame ResotoBaseImage
frame CollectSingle
ResotoBaseImage <|-- CollectSingle
note right of CollectSingle
   Use Resoto Base Image.
   Include collect_single project.
   Starting this image will run for
   for a single collect cycle.
end note
@enduml
